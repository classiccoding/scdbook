
# copy over common src files to here
system("cp ../../common/* .");

# scdmake configuration
$scddiscid                = 'SEGADISCSYSTEM';
$scdvolumename            = 'SCDBOOK';
$scdvolumeversion         = '0001';
$scdsystemname            = 'SCDBOOK';
$scdsystemversion         = '0000';
$scdcompanyname           = 'T-BV';
$scdgametitledomestic     = 'SCDBook Volume 0';
$scdgametitleoverseas     = 'SCDBook Volume 0';
$scddisctype              = 'GM';
$scdproductcode           = '00005';
$scdproductversion        = '00';
$scdio                    = 'J';
$scdmodem                 = '';
$pvdvolumeid              = 'SCDBOOK_VOLUME_0';
$pvdvolumesetid           = '';
$pvdpublisherid           = 'BV';
$pvdpreparerid            = '';
$pvdcopyrightfileid       = '';
$pvdabstractfileid        = '';
$pvdbibliographicalfileid = '';
$ipprefix                 = 'IP';
$spprefix                 = 'SP';
$outprefix                = 'SCDBOOK';

$isoType = 0;

$joliet                   = 0;
$jolietvolumeid           = 'SCDBOOK';

$scdcountry               = 'U';

# make less verbose by default
$verbosity                = 1;

$isoPublicDefault         = 0;

# things to do before building the SCD

$scdmakeincType = 3;

system("./COMMON.SH");

my %titles;
my $titleCount = 0;

foreach my $intxt (<../books/*.TXT>) {
    my $prefix = $intxt;
    if ( $prefix =~ /(?:^|[\\\/])([^\.\\\/]+)\.TXT$/ ) {
	$prefix = $1;
    }
    my $title = '';
    if ( open( INTXT, $intxt ) ) {
	while ( my $line = <INTXT> ) {
	    chomp $line;
	    if ( $line =~ /^\s*#\s*scdbook\s+settitle\(([^\(\)]+)\)\s*$/ ) {
		$title = $1;
		last;
	    }
	}
	close INTXT;
    }
    if ( $title eq '' ) {
	print STDERR "Missing scdbook settitle: $intxt\n";
    }
    my $titleSortable = $title;
    # remove articles a/an/the when sorting titles
    $titleSortable =~ s/^\s*(A|An|The)\s+//gi;
    if ( exists $titles{$titleSortable} ) {
	print STDERR "Duplicate scdbook settitle: $titleSortable\n";
    }
    $titles{$titleSortable}{'t'} = $title;
    $titles{$titleSortable}{'p'} = $prefix;
    $titles{$titleSortable}{'f'} = $intxt;
    $titleCount++;
}

open( SCDMAKE2, '>SCDMAKE2.INC' );
open( TOCSRC, '>TOCSRC.TXT' );

print TOCSRC ( "#scdbook settoc\n".
	       "#scdbook setscreenwidth(63)\n".
	       "#scdbook setscreenheight(23)\n".
	       "#scdbook verbosestart\n" );

# sort titles, first instruct, then PGL, then remainder of books
sub SortTitles {
    my $master0 = 10;
    my $master1 = 10;
    if ( $titles{$_[0]}{'p'} eq 'INSTRUCT' ) {
	$master0 = 0;
    } elsif ( $titles{$_[0]}{'p'} eq 'PGL' ) {
	$master0 = 1;
    } elsif ( $titles{$_[0]}{'p'} eq 'GPL' ) {
	$master0 = 2;
    }
    if ( $titles{$_[1]}{'p'} eq 'INSTRUCT' ) {
	$master1 = 0;
    } elsif ( $titles{$_[1]}{'p'} eq 'PGL' ) {
	$master1 = 1;
    } elsif ( $titles{$_[1]}{'p'} eq 'GPL' ) {
	$master1 = 2;
    }
    return ( $master0 <=> $master1 ) || ( $_[0] cmp $_[1] );
}

foreach my $titleSortable (sort { &SortTitles($a,$b) } keys %titles) {
    my $title = $titles{$titleSortable}{'t'};
    my $prefix = $titles{$titleSortable}{'p'};
    my $intxt = $titles{$titleSortable}{'f'};
    # add a leading space
    my $printTitle = $title;
    if ( length($printTitle) > 37 ) {
	$printTitle = substr($printTitle,0,37);
    }
    print SCDMAKE2 "\tdc.w\tFILE_${prefix}_BIN_START_SECTOR,FILE_${prefix}_BIN_SIZE_SECTORS+FILE_${prefix}_TXT_SIZE_SECTORS\n";
    print TOCSRC "$printTitle\x0A";
    system("../../bin/scdbookformat $prefix $intxt");
    system("scdasm -v=$verbosity $prefix.ASM $prefix.BIN");
    push @scdmakeinc, "$prefix.BIN";
    push @scdmakeinc, "$prefix.TXT";
    push @isoPublicFiles, "$prefix.TXT";
    if ( open(ROM, ">$prefix.ROM") ) {
	print ROM (
	    "\tinclude\tROMSTART.ASM\n".
	    "StartBookInfo:\n".
	    "\tinclude\t$prefix.ASM\n".
	    "\teven\n".
	    "StartBookText:\n".
	    "\tincbin\t$prefix.TXT\n".
	    "\teven\n".
	    "\tinclude\tROMEND.ASM\n" );
	close ROM;
    }
    system("scdasm -v=$verbosity $prefix.ROM $prefix.SMD");
}

print TOCSRC "#scdbook verboseend\n";

close SCDMAKE2;
close TOCSRC;

system("../../bin/scdbookformat TOC TOCSRC.TXT");

open( FILECNT, '>FILECNT.INC' );
print FILECNT "FileCount: equ $titleCount\n";
close FILECNT;

push @isoNotUsedFiles, 'SCDBOOK.ISO';
push @isoNotUsedFiles, 'SCDBOOK.BIN';
push @isoNotUsedFiles, 'SCDBOOK.CUE';
push @isoNotUsedFiles, 'SCDBOOK.TOC';
